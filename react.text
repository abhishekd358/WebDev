style componenent is library to create a componenent
uuid use to generate unique id's




import {initializeApp} from 'firebase/app'
import {getDatabase, ref, set} from 'firebase/database'

SDK Setup

cost app = initializeApp(firebaseConfig)
const database = getDatabase(app)


------if i want to send data -----
ref(database , 'databaseName/'+uuid).set({datat-that-you-want-to-send})






----------------------------------------------
what is difference between library and framework?

Modules are the basic building blocks.
Libraries are collections of modules.
Packages are distribution units that can include libraries and modules.
Frameworks are comprehensive systems that include packages, libraries, and modules, along with additional tools and guidelines for application development.


A library is a collection of pre-written code that developers can use to perform specific tasks or solve specific problems.
You call a library in your code when you need it (called it no inversion)
 Example :-React is a library for building user interfaces. You use React components and decide how to structure your application.

Framework:
    is a larger structure that provides the architecture for building an application. It dictates how your application should be structured.
    The framework calls your code, rather than you calling the framework. This is often referred to as Inversion of Control.
    Example : Angular (JavaScript): 
              Django : 
    less flexible.

Node.Js: Node.js is neither a library nor a framework. It is a runtime environment.
 it can be combined with frameworks like Express.js, NestJS
  It is built on Google Chrome's V8 JavaScript engine 





+++++++=What is componenet?
is the fundamental building block of a React, reusable piece of UI logic that represents a part of the user interface.
React components in designing scalable and maintainable applications. 
Break down large UIs into smaller, testable units.
 reduce code redundancy
 two main types: 1.Functional Components=> stateless components , rely on React hooks like useState
                2. Class Components=> statefull components, use this.state for managing state



package.json -> have all the meta data about the files and dependencises
manifest.json -> used to built progressive web app.

when we run react app > then 'index.js' in src folder runs first.
index.css -> used to give css that not change further






+++++++++++++++Export +++++

why  we write : export default App;     ??????????????

Use export default when your file exports a single primary value (e.g., a component).
when we use default then we import with any name . beacause we by default it name is App. so it not mattter, it point to same Components.

example:---- import hereWeCanGIveAnyName from './App';

====App.js=====
````````````````````````````````````````````````````````````````````

import React from 'react';
import ReactDOM from 'react-dom/client';

import GiveAnyName from './App'; // Renaming the default export t 'GiveAnyName'

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <Alex />
  </React.StrictMode>
);

``````````````````````````````````````````````````````````````



Use named exports when exporting multiple utilities from the same file. This makes imports clearer and reduces accidental naming conflicts.
  example :--- import App, { helperFunction } from './App';




++++++++++++++++++++++++++++++++++++
we use 'className' in component not 'id' because We using componenets repeatedly



+++++++++++++++Hooks++++++++++++++++++++++

to avoid the traditional method to capture event and then modify the thing we use Hooks

'useState' functionality have to be imported.
 
 'useState('you have to pass value here')' returns the array having the 
                                                1. Variable : 
                                                2. Function : use to change the value of the variable.
                  Example::-->
                  we use the array destructuring 
                  const [title, setTitle] = useState(props.title);
 



+++++++++++++++++++++++++HANDLING INPUT IN REACT+++++++++++++++++++++++



++++++++++++++++++TWO WAY BINDING+++++++++++++++++++++
when so ever we reseting the value of the state or the hook variable after getting the user input. then it called  Two Way BINDING



    we created Hooks
            ||
            \/
    then we storing the hook vaiable value to Object properties
            ||
            \/
    then using the Hooks Function we reset the value to the default value i.e Empty input



++++++++++++++DATA TRANSFER++++++++++++++++




+++++++++++++++useEffect++++++++++++++++
to stop the continuous fetching of the data from api it get re render the component
to stop continuous Loop we use 'useEffect' method


useEffect(()=>{
  //code
}, []);



+++++++++++++POST MEthod++++++++++++++++++++

fetch(('url'),
{method: 'POST', 
  body: JSON.Stringfy(Data_that_u_want_to_pass), 
  header:{
    'content-Type' : 'application/json'
    }
  });






======================================================


* creating app with Vite
>npm create vite@version_name
*Select Library name > enter project name

* install npm dependencises package
>npm install

* to start the project 
>npm  run dev


##############################
npx create-react-app  app_name
cd app_name
npm start

=================================================================


(Src)main.jsx in Vite == (Src) index.js in CRA

(Src)index.html in Vite == (Public) index.html in CRA


===================================================================


why useState we require?

normal variable are immutable in react ui